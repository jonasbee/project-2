{"version":3,"sources":["components/WeatherCard.js","components/CustomPopup.js","lib/api.js","components/Map.js","components/Clock.js","components/ForecastCard.js","components/WeatherShow.js","components/common/Nav.js","App.js","index.js"],"names":["WeatherCard","name","icon","tempC","to","className","src","alt","CustomPopup","latitude","longitude","altitude","weather","setPopup","offsetTop","onClose","closeButton","location","current","temp_c","condition","weatherApiKey","process","baseUrl","getWeatherAtLngLat","lng","lat","axios","get","Map","useState","zoom","bearing","pitch","viewport","setViewport","weatherAtClick","setWeatherAtClick","showPopup","getWeather","lngLat","a","data","console","log","mapboxApiAccessToken","mapStyle","width","height","onViewportChange","onClick","e","lon","StartClock","times","localtime","split","hours","minutes","Date","getSeconds","second","setSecond","Number","minute","setMinute","hour","setHour","useEffect","setTimeout","slice","ForecastCard","date","maxTemp","minTemp","tempUnit","reverse","join","text","toUpperCase","WeatherShow","currentWeather","setCurrentWeather","setLocation","forecast","setForecast","isError","setIsError","selectedUnits","setSelectedUnits","units","system","temp","wind","useParams","city","getData","country","region","wind_dir","uv","humidity","forecastday","map","day","Nav","history","useHistory","searchValue","setSearchValue","handleSubmit","preventDefault","search","push","type","onSubmit","placeholder","onKeyUp","target","value","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7251a1fa.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nfunction WeatherCard({ name, icon, tempC }) {\n\n  return (\n    <Link to={`/weather/${name}`}>\n      <div className=\"weather-card\">\n        <p>{`${name} ${tempC}Â°C`}</p>\n        <img src={icon} alt=\"icon\" />\n        <p>Hold down for forecast</p>\n      </div>\n    </Link>\n  )\n}\n\nexport default WeatherCard","import { Popup } from 'react-map-gl'\nimport WeatherCard from './WeatherCard'\n\nfunction CustomPopup({ latitude, longitude, altitude, weather, setPopup }) {\n\n  return (\n    <div>\n      <Popup\n        latitude={latitude}\n        longitude={longitude}\n        altitude={altitude}\n        offsetTop={-30}\n        onClose={() => setPopup(false)}\n        closeButton={false}\n      >\n        <WeatherCard\n          name={weather.location.name}\n          tempC={weather.current.temp_c}\n          icon={weather.current.condition.icon}\n        />\n      </Popup>\n    </div>\n  )\n}\n\nexport default CustomPopup","import axios from 'axios'\nconst weatherApiKey = process.env.REACT_APP_WEATHER_API_KEY\nconst baseUrl = 'https://api.weatherapi.com/v1'\n\nexport function getWeatherAtLngLat([ lng, lat ]) {\n  return axios.get(`${baseUrl}/current.json?key=${weatherApiKey}&q=${lat},${lng}&aqi=no`)\n}\n\nexport function getWeatherAtCity(city) {\n  return axios.get(`${baseUrl}/current.json?key=${weatherApiKey}&q=${city}&aqi=no`)\n}\n\nexport function get3DayForecastAtCity(city) {\n  return axios.get(`${baseUrl}/forecast.json?key=${weatherApiKey}&q=${city}&days=3&aqi=no`)\n}","import React, { useState } from 'react'\nimport CustomPopup from './CustomPopup'\nimport ReactMapGl from 'react-map-gl'\nimport { getWeatherAtLngLat } from '../lib/api'\nconst mapBoxAccessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\n\nfunction Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 5,\n    longitude: 5,\n    altitude: 5,\n    zoom: 1,\n    bearing: 0,\n    pitch: 0,\n  })\n  const [weatherAtClick, setWeatherAtClick] = useState(null)\n  const [showPopup, setPopup] = useState(false)\n\n  const getWeather = async (lngLat) => {\n    try {\n      const { data } = await getWeatherAtLngLat(lngLat)\n      setWeatherAtClick(data)\n      console.log('data', data)\n      setPopup(true)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClick = (e) => {\n    console.log(e)\n    getWeather(e.lngLat)\n  }\n\n  return (\n    <div className=\"map-container\">\n      <ReactMapGl\n        mapboxApiAccessToken={mapBoxAccessToken}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        width=\"100%\"\n        height=\"100%\"\n        onViewportChange={(viewport => setViewport(viewport))}\n        onClick={handleClick}\n        {...viewport}\n        className=\"is-fullheight-with-navbar\"\n      >\n        {showPopup &&\n          <CustomPopup\n            latitude={weatherAtClick.location.lat}\n            longitude={weatherAtClick.location.lon}\n            altitude={viewport.altitude}\n            setPopup={setPopup}\n            weather={weatherAtClick}\n          />\n        }\n      </ReactMapGl>\n    </div>\n  )\n}\n\nexport default Map","import { useEffect, useState } from 'react'\n\nexport function StartClock({ localtime }) {\n\n  const times = localtime.split(':')\n  const [hours, minutes] = times\n\n  const [ second, setSecond ] = useState(new Date().getSeconds())\n  const [ minute, setMinute ] = useState(Number(minutes))\n  const [ hour, setHour] = useState(Number(hours))\n\n  const secondIncrement = () => {\n    if (second < 59) {\n      setSecond(second + 1)\n    } else {\n      setSecond(0) \n      if (minute < 59) {\n        setMinute(Number(minute + 1))\n      } else {\n        setMinute(0)\n        if (hour < 23) {\n          setHour(Number(hour + 1))\n        } else {\n          setHour(0)\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      secondIncrement()\n    }, 1000)\n  }, [second])\n\n  return (\n    <h4 className=\"title is-4\">\n      Local Time: {`${('0' + hour).slice(-2)}:${('0' + minute).slice(-2)}:${('0' + second).slice(-2)}`}\n    </h4>\n  )\n}","function ForecastCard({ date, condition, maxTemp, minTemp, tempUnit }) {\n  return (\n    <div  className=\"column is-third\">\n      <h5 className=\"title is-5\">\n        {date.split('-').reverse().join('/')}\n      </h5>\n      <div className=\"columns\">\n        <div className=\"column is-half\">\n          <p>{condition.text}</p>\n          <img src={condition.icon} alt=\"icon\" />\n        </div>\n        <div className=\"column is-half\">\n          <p>Max: {maxTemp}Â°{tempUnit.toUpperCase()}</p>\n          <p>Min: {minTemp}Â°{tempUnit.toUpperCase()}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ForecastCard","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { get3DayForecastAtCity } from '../lib/api.js'\nimport { StartClock } from './Clock.js'\nimport ForecastCard from './ForecastCard.js'\n\nfunction WeatherShow() {\n  const [currentWeather, setCurrentWeather] = useState(null)\n  const [location, setLocation] = useState(null)\n  const [forecast, setForecast] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n  const [selectedUnits, setSelectedUnits] = useState(0)\n\n  const units = [{\n    system: 'Metric',\n    temp: 'c',\n    wind: 'kph',\n  }, {\n    system: 'Imperial',\n    temp: 'f',\n    wind: 'mph',\n  }]\n\n  const { name } = useParams()\n  // console.log(units)\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await get3DayForecastAtCity(name)\n        setForecast(data.forecast)\n        setCurrentWeather(data.current)\n        setLocation(data.location)\n      } catch (err) {\n        setIsError(true)\n        console.log(err)\n      }\n    }\n    getData()\n  }, [name])\n\n  const changeUnits = () => {\n    setSelectedUnits(selectedUnits ? 0 : 1)\n    console.log(units[selectedUnits].system)\n  }\n\n  return (\n    <section className=\"section\">\n      {isError ?\n        <h1 className=\"title is-1\">Oops, we failed to find the forecast here :(</h1>\n        :\n        <div className=\"container\">\n          {(location && currentWeather) &&\n            <>\n              <div className=\"columns\">\n                <div className=\"column is-two-thirds\">\n                  <h1 className=\"title is-1\">{location.name}</h1>\n                </div>\n                <div className=\"column is-one-third\">\n                  <button className=\"button is-warning\" onClick={changeUnits}>Change to {units[selectedUnits ? 0 : 1].system}</button>\n                </div>\n              </div>\n              <hr />\n              <div className=\"columns\">\n                <div className=\"column is-third\">\n                  <h4 className=\"title is-4\">Country: {location.country}</h4>\n                  <hr />\n                  <h4 className=\"title is-4\">Region: {location.region}</h4>\n                  <hr />\n                  <StartClock localtime={location.localtime.split(' ')[1]} />\n                </div>\n                <div className=\"column is-third\">\n                  <h4 className=\"title is-4\">{currentWeather.condition.text}</h4>\n                  <hr />\n                  <h4 className=\"title is-4\">{currentWeather[`temp_${units[selectedUnits].temp}`]}Â°{units[selectedUnits].temp.toUpperCase()}</h4>\n                  <hr />\n                  <h4 className=\"title is-4\">Wind: {currentWeather[`wind_${units[selectedUnits].wind}`]} {units[selectedUnits].wind} {currentWeather.wind_dir}\n                  </h4>\n                  <hr />\n                </div>\n                <div className=\"column is-third\">\n                  <h4 className=\"title is-4\">UV: {currentWeather.uv}</h4>\n                  <hr />\n                  <h4 className=\"title is-4\">Humidity: {currentWeather.humidity}%</h4>\n                  <hr />\n                  <img src={currentWeather.condition.icon} />\n                </div>\n              </div>\n            </>\n          }\n          {forecast ?\n            <>\n              <h2 className=\"title is-2\">3 Day Forecast</h2>\n              <hr />\n              <div className=\"columns\">\n                {forecast.forecastday.map(day => (\n                  <ForecastCard\n                    key={day.date}\n                    date={day.date}\n                    maxTemp={day.day[`maxtemp_${units[selectedUnits].temp}`]}\n                    minTemp={day.day[`mintemp_${units[selectedUnits].temp}`]}\n                    condition={day.day.condition}\n                    tempUnit={units[selectedUnits].temp}\n                  />\n                ))}\n              </div>\n            </>\n            :\n            <h2>Loading Forecast...</h2>\n          }\n        </div>\n      }\n    </section>\n  )\n}\n\nexport default WeatherShow","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nfunction Nav() {\n  const history = useHistory()\n  const [searchValue, setSearchValue] = useState(null)\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const search = searchValue.split(' ').join('%20')\n    history.push(`/weather/${search}`)\n  }\n  \n  return (\n    <nav className=\"navbar is-dark is-fullwidth\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"navbar-item\">\n            Weather World Map\n          </Link>\n        </div>\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <form type=\"search\" onSubmit={handleSubmit}>\n              <span className=\"navbar-item is-inline-block\">\n                <span className=\"field\">\n                  <span className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"search\"\n                      placeholder=\"City name\"\n                      onKeyUp={handleChange}\n                    />\n                  </span>\n                </span>\n              </span>\n              <span className=\"navbar-item is-inline-block\">\n                <span className=\"field\">\n                  <button type=\"submit\" className=\"button is-warning\">\n                    Search\n                  </button>\n                </span>\n              </span>\n            </form>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav","import Map from './components/Map'\nimport WeatherShow from './components/WeatherShow.js'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Nav from './components/common/Nav.js'\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <div className=\"main-container\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Map}/>\n          <Route path=\"/weather/:name\" component={WeatherShow}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}